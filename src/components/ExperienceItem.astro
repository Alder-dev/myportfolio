---
interface Props {
  title: string;
  date: string;
  descriptions: string[];
  links?: { label: string; url: string }[];
}

const { title, date, descriptions, links } = Astro.props;
---

<div
  class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"
>
</div>
<time
  class="mb-1 text-sm font-normal leading-none text-sky-300"
  >{date}</time
>
<h3 class="text-lg font-semibold text-blue-100/90 mt-2">
  {title}
</h3>
<ul class="list-disc pl-5 text-white opacity-90 space-y-1 text-pretty">
  {descriptions.map((desc) =>(
    <li>{desc}</li>
  ) )}
</ul>
{
  links?.map((link) => (
    <div class="mt-2 flex flex-wrap gap-1">
      <a
        href={link.url}
        target="_blank"
        class="inline-flex items-center py-2.5 px-5 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"
      >
        {link.label}
        <svg
          class="w-3 h-3 ms-2 rtl:rotate-180"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 14 10"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M1 5h12m0 0L9 1m4 4L9 9"
          />
        </svg>
      </a>
    </div>
  ))
}
